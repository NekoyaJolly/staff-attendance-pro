version: '3.8'

services:
  # テスト用フロントエンド
  frontend-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    ports:
      - "4173:4173"
    environment:
      - NODE_ENV=test
      - VITE_API_URL=http://backend-test:3000
    depends_on:
      - backend-test
    networks:
      - test-network
    volumes:
      - ./test-results:/app/test-results
    command: >
      sh -c "
        npm run build &&
        npm run test:unit &&
        npm run test:e2e &&
        npm run preview
      "

  # テスト用バックエンド
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=test
      - PORT=3000
      - DATABASE_URL=postgresql://testuser:testpass@database-test:5432/test_db
      - REDIS_URL=redis://redis-test:6379
    depends_on:
      - database-test
      - redis-test
    networks:
      - test-network
    volumes:
      - ./backend/test-results:/app/test-results

  # テスト用データベース
  database-test:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
    volumes:
      - ./database/test-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - test-network
    tmpfs:
      - /var/lib/postgresql/data

  # テスト用Redis
  redis-test:
    image: redis:7-alpine
    networks:
      - test-network
    tmpfs:
      - /data

  # E2Eテスト実行環境
  e2e-tests:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    environment:
      - BASE_URL=http://frontend-test:4173
    depends_on:
      - frontend-test
    networks:
      - test-network
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
    command: >
      sh -c "
        npx wait-on http://frontend-test:4173 &&
        npm run test:e2e
      "

  # パフォーマンステスト
  performance-test:
    image: sitespeedio/sitespeed.io:latest
    volumes:
      - ./performance-results:/sitespeed.io/sitespeed-result
    networks:
      - test-network
    depends_on:
      - frontend-test
    command: >
      --budget.configPath /sitespeed.io/budget.json
      --outputFolder /sitespeed.io/sitespeed-result
      http://frontend-test:4173

networks:
  test-network:
    driver: bridge