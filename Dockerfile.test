# マルチステージビルド: テスト環境
FROM node:18-alpine AS test-builder

WORKDIR /app

# システム依存関係をインストール
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

# Playwright用の環境変数
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# パッケージファイルをコピー
COPY package*.json ./

# 全依存関係をインストール（devDependencies含む）
RUN npm ci && npm cache clean --force

# ソースコードをコピー
COPY . .

# Playwrightブラウザをインストール
RUN npx playwright install chromium

# テスト実行
RUN npm run lint
RUN npm run type-check
RUN npm run test:unit

# ビルドテスト
RUN npm run build

# テスト結果ディレクトリを作成
RUN mkdir -p test-results

# 本番環境
FROM nginx:alpine AS production

# ビルド済みファイルをnginxに配置
COPY --from=test-builder /app/dist /usr/share/nginx/html

# nginx設定ファイルをコピー
COPY nginx.conf /etc/nginx/conf.d/default.conf

# ヘルスチェック用スクリプト
RUN apk add --no-cache curl

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# ポート80を公開
EXPOSE 80

# nginxを起動
CMD ["nginx", "-g", "daemon off;"]